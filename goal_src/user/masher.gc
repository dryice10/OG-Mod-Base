;;(the masher (process-by-name "masher" *active-pool*))

(deftype masher (process)
  ((button-choice pad-buttons)
  (mash-count float)
  (timestamp time-frame)
  (max-duration float)
  (mps1 float)      
  (mps-half float)  ;mashes per second after half of max-duration
  (mps-full float)
  (instruction string)
  (bar-width int)
   )
  (:state-methods 
    masher-done 
    masher-start
    masher-mash)
  )


(defbehavior draw-text masher ()
  (with-dma-buffer-add-bucket ((testbuf (-> (current-frame) global-buf)) (bucket-id debug-no-zbuf))
    (draw-string-xy (string-format "~s" (-> self instruction)) testbuf 15 30 (the font-color 4) (font-flags shadow kerning))
    (draw-string-xy (string-format "Mash count: ~,,0f" (-> self mash-count)) testbuf 15 38 (the font-color 4) (font-flags shadow kerning))
    (draw-string-xy (string-format "Mashes per sec: ~,,2f ~,,2f ~,,2f" (-> self mps1) (-> self mps-half) (-> self mps-full)) testbuf 15 46 (the font-color 4) (font-flags shadow kerning))
  )
  (none)
)

(defbehavior draw-bar masher ()
  (with-dma-buffer-add-bucket ((testbuf (-> (current-frame) global-buf)) (bucket-id debug-no-zbuf))
    ;(draw-sprite2d-xy testbuf bar-x-pos bar-y-pos bar-w bar-h *color-black*)
    (draw-sprite2d-xy testbuf 16 54 (+ (-> self bar-width) 2) 4 *color-black*) ;background bar
    (draw-sprite2d-xy testbuf 17 55 (the int (lerp-scale 0.0 (the float (-> self bar-width)) ;big lerp for timer bar width
        (the float (- (get-current-time) (-> self timestamp))) 0.0 (the float (seconds (-> self max-duration))))) 
        2 *color-red*)
  )
  (none)
)

(defstate masher-done (masher)
  :virtual #t
  :enter (behavior () 
    (set! (-> self instruction) "Press L2+X to restart.")
    )
  :code (behavior ()
    (loop 
      (draw-text)
      (when (cpad-hold? 0 l2)
        (when (cpad-pressed? 0 x)
          (cpad-clear! 0 l2 x)    ;this fixes auto picking x in jak 1
          (go-virtual masher-start)
        )
      )
      (suspend))
    )
  :exit (behavior () (cpad-clear! 0 x)) ;this did not fix the bug in jak2
  )

(defstate masher-mash (masher)
  :virtual #t
  :enter (behavior () 
    (set! (-> self instruction) "Keep mashing :)")
    (set! (-> self timestamp) (get-current-time))
    )
  :code (behavior ()
    (loop
      (draw-text)
      (draw-bar)
      (when (logtest? (cpad-pressed 0) (-> self button-choice))
        (+! (-> self mash-count) 1.0) ;count mash
      )
      ;calculate mash per second stats
      (when (= (get-current-time) (+ (-> self timestamp) (seconds 1)))
        (set! (-> self mps1) (/ (-> self mash-count) 1.0))
      )
      (when (= (get-current-time) (+ (-> self timestamp) (/ (seconds (-> self max-duration)) 2)))
        (set! (-> self mps-half) (/ (-> self mash-count) (/ (-> self max-duration) 2.0)))
      )
      (when (time-elapsed? (-> self timestamp) (seconds (-> self max-duration)))
        (set! (-> self mps-full) (/ (-> self mash-count) (-> self max-duration)))
        ;go to done state after max duration
        (go-virtual masher-done)
      )
      (suspend))
    )
  )

(defstate masher-start (masher)
  :virtual #t
  :enter (behavior () 
    (set! (-> self instruction) "Mash a button to start.")
    (set! (-> self button-choice) (the pad-buttons 0))
    (set! (-> self mash-count) 0.0)
    (set! (-> self mps1) 0.0)      
    (set! (-> self mps-half) 0.0)  ;mashes per second after half of max-duration
    (set! (-> self mps-full) 0.0)
    (cpad-clear! 0 x)    ;this did not fix the bug in jak2
    )
  :code (behavior ()
    (loop
      (draw-text)
      (when (not (zero? (cpad-pressed 0)))
        (set! (-> self button-choice) (the pad-buttons (cpad-pressed 0)))
        ;(+! (-> self mash-count) 1.0)
        (set! (-> self instruction) "Mash a button to start.")
        (go-virtual masher-mash)
      )
    (suspend))
    )
  )


(defbehavior masher-init-by-other masher ()
  (set! (-> self button-choice) (the pad-buttons 0))
  (set! (-> self mash-count) 0.0)
  (set! (-> self timestamp) 0)
  (set! (-> self max-duration) 5.0)
  (set! (-> self mps1) 0.0)      
  (set! (-> self mps-half) 0.0)  ;mashes per second after half of max-duration
  (set! (-> self mps-full) 0.0) 
  (set! (-> self bar-width) 140)
  (go-virtual masher-start)
  )


(defun masher-on ()
  (process-spawn masher)
  (none)
)

(defun masher-off ()
  "Kill the process"
  (kill-by-name "masher" *active-pool*)
  )